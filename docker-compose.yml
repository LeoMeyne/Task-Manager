version: '3.9'

services:

  # Database part
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres  
      POSTGRES_PASSWORD: password 
      POSTGRES_DB: taskapp 
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  # Application part (using web balancing)
  app1:
    build:
      context: ./task-manager-back
      dockerfile: Dockerfile
    container_name: task-manager-app-1 
    restart: always
    depends_on:
      - db 
    expose:
      - "3000"
    networks:
      - app_network

  app2:
    build:
      context: ./task-manager-back
      dockerfile: Dockerfile
    container_name: task-manager-app-2
    restart: always
    depends_on:
      - db
    expose:
      - "3000"
    networks:
      - app_network

  app3:
    build:
      context: ./task-manager-back
      dockerfile: Dockerfile
    container_name: task-manager-app-3
    restart: always
    depends_on:
      - db
    expose:
      - "3000"
    networks:
      - app_network

  # Nginx part
  nginx:
    image: nginx:latest  
    container_name: task-manager-nginx  
    restart: always  
    ports:
      - "80:80"  
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro 
      - ./task-manager-micro-front/auth:/usr/share/nginx/html/auth 
      - ./task-manager-micro-front/dashboard:/usr/share/nginx/html/dashboard 
      - ./task-manager-micro-front/projects:/usr/share/nginx/html/projects 
    depends_on:
      - app1  
      - app2  
      - app3  
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
